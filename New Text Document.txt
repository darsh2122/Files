import net.sf.JRecord.JRecordInterface1;
import net.sf.JRecord.Common.Constants;
import net.sf.JRecord.Details.AbstractLine;
import net.sf.JRecord.IO.AbstractLineReader;
import net.sf.JRecord.IO.AbstractLineWriter;
import net.sf.JRecord.IO.CobolIoProvider;
import net.sf.JRecord.Numeric.Convert;
import net.sf.JRecord.def.IO.builders.ICobolIOBuilder;

import java.io.FileWriter;
import java.io.IOException;

public class MainframeToCsv {

    public static void main(String[] args) throws IOException {
        // Paths to the input file, copybook, and output CSV file
        String inputFilePath = "path/to/your/mainframe/file";
        String copybookPath = "path/to/your/copybook.cbl";
        String outputCsvPath = "path/to/output.csv";

        // Define the Cobol IO Builder
        ICobolIOBuilder ioBuilder = JRecordInterface1.COBOL
                .newIOBuilder(copybookPath)
                .setFileOrganization(Constants.IO_FIXED_LENGTH)
                .setFont("CP037") // EBCDIC encoding
                .setDialect(Convert.FMT_MAINFRAME);

        // Create a reader for the input file
        AbstractLineReader reader = CobolIoProvider.getInstance().getLineReader(ioBuilder);
        reader.open(inputFilePath);

        // Create a writer for the CSV file
        FileWriter csvWriter = new FileWriter(outputCsvPath);

        // Write CSV header (optional)
        csvWriter.write("Field1,Field2,Field3\n"); // Replace with your field names

        // Read and process each line
        AbstractLine line;
        while ((line = reader.read()) != null) {
            // Extract fields from the line
            String field1 = line.getFieldValue("FIELD-1").asString();
            String field2 = line.getFieldValue("FIELD-2").asString();
            String field3 = line.getFieldValue("FIELD-3").asString();

            // Write the fields to the CSV file
            csvWriter.write(field1 + "," + field2 + "," + field3 + "\n");
        }

        // Close resources
        reader.close();
        csvWriter.close();

        System.out.println("CSV file created successfully at: " + outputCsvPath);
    }
}
